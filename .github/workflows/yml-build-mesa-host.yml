name: yml-uses-make-image-LE13
on:
  workflow_call:
    inputs:
      runner:
        description: "set runs-on for host arch"
        required: true
        type: string
      debug:
        description: "Provide debug output from GHA run"
        #default: no_debug
        required: true
        type: string
      ephemeral:
        description: "Target and build-root are ephemeral"
        #default: ephemeral
        required: true
        type: string
      upload_url:
        description: "Release upload url"
        required: true
        type: string
      buildcmd:
        description: "build command to run"
        #default: "make image"
        required: true
        type: string
      gitref:
        description: "git branch or hash to build"
        #default: libreelec-10.0
        required: true
        type: string
      group:
        description: "concurrency group"
        #default: Generic_x86_64-10_0
        required: true
        type: string
      project:
        description: "target project"
        #default: Generic
        required: true
        type: string
      arch:
        description: "target arch"
        #default: x86_64
        required: true
        type: string
      device:
        description: "target device"
        default: ""
        required: false
        type: string
      targetbuilddir:
        description: "TARGETBUILDDIR"
        #default: ""
        required: true
        type: string
      version:
        description: "version code used in TARGETBUILDDIR"
        default: ""
        required: false
        type: string

env:
  BASEDIR: /var/media/DATA/github-actions
  # Distro Target Variables
  PROJECT: ${{ inputs.project }}
  ARCH: ${{ inputs.arch }}
  DEVICE: ${{ inputs.device }}
  TARGETBUILDDIR: ${{ inputs.targetbuilddir }}
  LE_DISTRO_VERSION: ${{ inputs.version }}

concurrency:
  group: ${{ inputs.group }}
  cancel-in-progress: false

jobs:
  build_image:
    runs-on: ${{ inputs.runner }}
    #runs-on: ubuntu-24.04-arm
    permissions:
      contents: write

    timeout-minutes: 360

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.gitref }}
          fetch-depth: 2
          repository: "${{ github.repository_owner }}/LibreELEC.tv"
          path: "LibreELEC.tv"

      - name: Customise the checked out git repository
        run: |
          cd LibreELEC.tv
          sed -i -e "s/RUN useradd docker/RUN useradd docker -o -u $(id -u)/" tools/docker/noble/Dockerfile

      - name: Create docker image for build - tools/docker/noble
        run: |
          cd LibreELEC.tv
          docker build --pull -t gh-${{ github.run_id }} tools/docker/noble

      - name: Prepare the LibreELEC.tv directory - do not leave files behind
        if: inputs.ephemeral == 'ephemeral'
        run: |
          cd LibreELEC.tv
          # set the build_dir=/build
          echo "build_dir=/build" >> $GITHUB_ENV
          echo "CCACHE_DISABLE=1" >> $GITHUB_ENV

      - name: Display environment
        if: inputs.debug == 'debug'
        run: |
          cd LibreELEC.tv
          echo "pwd: $(pwd)"
          echo "id: $(id)"
          echo "whoami: $(whoami)"
          echo "docker images: $(docker images)"
          echo ""
          echo "inputs.clean_le: ${{ inputs.clean_le }}"
          echo "inputs.debug: ${{ inputs.debug }}"
          echo "inputs.ephemeral: ${{ inputs.ephemeral }}"
          echo "inputs.upload: ${{ inputs.upload }}"

      - name: Build LE in docker container
        run: |
          cd LibreELEC.tv
          docker run --rm -v `pwd`:/build \
                          -w /build -i \
                          -e PROJECT=${{ env.PROJECT }} \
                          -e ARCH=${{ env.ARCH }} \
                          -e DEVICE=${{ env.DEVICE }} \
                          -e ONELOG=no -e LOGCOMBINE=fail \
                          -e BUILD_DIR=${{ env.build_dir }} \
                          -e BUILD_PERIODIC=nightly \
                          -e CCACHE_DISABLE=${{ env.CCACHE_DISABLE }} \
                          gh-${{ github.run_id }} ${{ inputs.buildcmd }} ${{ env.NOOBS }}
        continue-on-error: true

      - name: Prepare artifacts - ephemeral
        if: inputs.ephemeral == 'ephemeral'
        run: |
          cd LibreELEC.tv
          mkdir -p ${{ env.TARGETBUILDDIR }}/artifact
          grep ^FAIL ${{ env.TARGETBUILDDIR }}/.threads/joblog | \
            awk '{ print $5, $12 }' | tr ':' '_' | \
              while read failedpkg failedlog; do
                mv $(echo ${failedlog} | sed 's#/build/##') \
                  ${{ env.TARGETBUILDDIR }}/artifact/${{ env.TARGETBUILDDIR }}-${failedpkg}-$(echo ${failedlog} | sed 's#.*/##')
              done

      - name: Prepare artifacts - no_ephemeral
        if: inputs.ephemeral == 'no_ephemeral'
        run: |
          cd LibreELEC.tv
          mkdir -p ${{ env.BASEDIR }}/build-root/${{ env.TARGETBUILDDIR }}/artifact
          grep ^FAIL ${{ env.BASEDIR }}/build-root/${{ env.TARGETBUILDDIR }}/.threads/joblog | \
            awk '{ print $5, $12 }' | tr ':' '_' | \
              while read failedpkg failedlog; do
                mv ${{ env.BASEDIR }}/${failedlog} \
                  ${{ env.BASEDIR }}/build-root/${{ env.TARGETBUILDDIR }}/artifact/${{ env.TARGETBUILDDIR }}-${failedpkg}-$(echo ${failedlog} | sed 's#.*/##')
              done

      - name: Upload failed artifacts - ephemeral
        if: inputs.ephemeral == 'ephemeral'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.group }}-failed
          path: LibreELEC.tv/${{ env.TARGETBUILDDIR }}/artifact/
          if-no-files-found: ignore

      - name: Upload failed artifacts - no_ephemeral
        if: inputs.ephemeral == 'no_ephemeral'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.group }}-failed
          path: ${{ env.BASEDIR }}/build-root/${{ env.TARGETBUILDDIR }}/artifact/
          if-no-files-found: ignore

      - name: Clean up - remove docker image tag
        run: |
          cd LibreELEC.tv
          docker image rm -f gh-${{ github.run_id }}

      - name: List files in target
        run: |
          cd LibreELEC.tv
          ls -lah sources/mesa-host/

      - name: upload x86_64 mesa:host
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ inputs.upload_url }}
          asset_path: LibreELEC.tv/sources/mesa-host/mesa-host-13.0-25.1.0-x86_64.tar
          asset_name: mesa-host-13.0-25.1.0-x86_64.tar
          asset_content_type: application/tar

      - name: upload x86_64 mesa:host sha256
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ inputs.upload_url }}
          asset_path: LibreELEC.tv/sources/mesa-host/mesa-host-13.0-25.1.0-x86_64.tar.sha256
          asset_name: mesa-host-13.0-25.1.0-x86_64.tar.sha256
          asset_content_type: text/plain
